{"version":3,"sources":["reducers/quotes.js","actions/types.js","reducers/index.js","store.js","actions/index.js","components/Quote.js","components/QuoteCard.js","App.js","index.js"],"names":["defaultState","quote","name","email","date","Date","now","generatedQuotes","id","quotes","state","arguments","length","undefined","action","type","Object","objectSpread","payload","body","concat","toConsumableArray","filter","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","apply","generateQuote","dispatch","randomNum","Math","floor","random","fetch","toString","then","res","json","data","connect","author","_ref","react_default","a","createElement","className","onClick","window","open","QuoteCard","deleteQuote","key","src","alt","App","_this","this","Fragment","components_Quote","props","map","item","i","components_QuoteCard","href","Component","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.78104a66.chunk.js","sourcesContent":["import { GENERATE_QUOTE, DELETE_QUOTE } from \"../actions/types\";\r\n\r\nconst defaultState = {\r\n  quote: \"Hello World!\",\r\n  name: \"Foo Bar\",\r\n  email: \"foo@baz.com\",\r\n  date: Date(Date.now()),\r\n  generatedQuotes: [],\r\n  id: 0\r\n};\r\n\r\nconst quotes = (state = defaultState, action) => {\r\n  switch (action.type) {\r\n    case GENERATE_QUOTE:\r\n      return {\r\n        ...state,\r\n        quote: action.payload.body,\r\n        name: action.payload.name,\r\n        email: action.payload.email,\r\n        date: action.date,\r\n        id: action.payload.id,\r\n        generatedQuotes: [\r\n          ...state.generatedQuotes,\r\n          {\r\n            quote: action.payload.body,\r\n            name: action.payload.name,\r\n            email: action.payload.email,\r\n            date: action.date,\r\n            id: action.payload.id\r\n          }\r\n        ]\r\n      };\r\n    case DELETE_QUOTE:\r\n      return {\r\n        ...state,\r\n        generatedQuotes: state.generatedQuotes.filter(\r\n          quote => quote.id !== action.id\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default quotes;\r\n","export const GENERATE_QUOTE = \"GENERATE_QUOTE\";\r\nexport const DELETE_QUOTE = \"DELETE_QUOTE\";\r\n","import { combineReducers } from \"redux\";\r\nimport quotes from \"./quotes\";\r\n\r\nexport default combineReducers({\r\n  quotes\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(\r\n    applyMiddleware(...middleware)\r\n    // other store enhancers if any\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import { GENERATE_QUOTE, DELETE_QUOTE } from \"./types\";\r\n\r\nexport const generateQuote = () => dispatch => {\r\n  const randomNum = Math.floor(Math.random() * (500 - 1)) + 1;\r\n  return fetch(\r\n    `https://jsonplaceholder.typicode.com/comments?id=${randomNum.toString()}`\r\n  )\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      dispatch({\r\n        type: GENERATE_QUOTE,\r\n        payload: data[0],\r\n        date: Date(Date.now())\r\n      });\r\n    });\r\n};\r\n\r\nexport const deleteQuote = id => ({\r\n  type: DELETE_QUOTE,\r\n  id\r\n});\r\n","/* eslint-disable react/require-default-props */\r\n/* eslint-disable react/button-has-type */\r\n/* eslint-disable react/jsx-filename-extension */\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { generateQuote } from \"../actions\";\r\n\r\nconst Quote = ({ quote, author, email, date, generateQuote }) => {\r\n  return (\r\n    <div className=\"box\">\r\n      <p>\r\n        <strong>Quote:</strong> {quote}\r\n      </p>\r\n      <p>\r\n        <strong>Author:</strong> {author}\r\n      </p>\r\n      <p>\r\n        <strong>Email:</strong> {email}\r\n      </p>\r\n      <p>\r\n        <strong>Date:</strong> {date}\r\n      </p>\r\n      <br />\r\n      <div className=\"buttons\">\r\n        <button className=\"button is-primary is-small\" onClick={generateQuote}>\r\n          New Quote\r\n        </button>\r\n        <button\r\n          className=\"button is-success is-small\"\r\n          onClick={() =>\r\n            window.open(\r\n              `https://twitter.com/intent/tweet?text=\"${quote}\" Quote by: ${author}`\r\n            )\r\n          }\r\n        >\r\n          Tweet Quote\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nQuote.propTypes = {\r\n  quote: PropTypes.string,\r\n  author: PropTypes.string,\r\n  email: PropTypes.string,\r\n  date: PropTypes.string,\r\n  generateQuote: PropTypes.func\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    quote: state.quotes.quote,\r\n    author: state.quotes.name,\r\n    email: state.quotes.email,\r\n    date: state.quotes.date\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    generateQuote: () => dispatch(generateQuote())\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Quote);\r\n","/* eslint-disable react/button-has-type */\r\n/* eslint-disable react/jsx-filename-extension */\r\n/* eslint-disable react/require-default-props */\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst QuoteCard = ({ author, email, date, quote, id, deleteQuote }) => {\r\n  return (\r\n    <div className=\"box\" key={date}>\r\n      <article className=\"media\">\r\n        <div className=\"media-left\">\r\n          <figure className=\"image is-128x128\">\r\n            <img\r\n              src=\"https://bulma.io/images/placeholders/128x128.png\"\r\n              alt=\"Mock\"\r\n            />\r\n          </figure>\r\n        </div>\r\n        <div className=\"media-content\">\r\n          <div className=\"content\">\r\n            <p>\r\n              <strong>{author}</strong>\r\n              <small>{email}</small>\r\n              <br />\r\n              <small>\r\n                <em>{date}</em>\r\n              </small>\r\n              <br />\r\n              {quote}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </article>\r\n      <br />\r\n      <div className=\"buttons\">\r\n        <button\r\n          className=\"button is-success is-small\"\r\n          onClick={() =>\r\n            window.open(\r\n              `https://twitter.com/intent/tweet?text=\"${quote}\" Quote by: ${author}`\r\n            )\r\n          }\r\n        >\r\n          Tweet Quote\r\n        </button>\r\n        <button\r\n          className=\"button is-danger is-small\"\r\n          onClick={() => deleteQuote(id)}\r\n        >\r\n          Delete Quote\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nQuoteCard.propTypes = {\r\n  quote: PropTypes.string,\r\n  author: PropTypes.string,\r\n  email: PropTypes.string,\r\n  date: PropTypes.string,\r\n  deleteQuote: PropTypes.func\r\n};\r\n\r\nexport default QuoteCard;\r\n","import React, { Component } from \"react\";\r\nimport Quote from \"./components/Quote\";\r\nimport QuoteCard from \"./components/QuoteCard\";\r\nimport { connect } from \"react-redux\";\r\nimport { generateQuote, deleteQuote } from \"./actions\";\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    generateQuote();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <section className=\"section\">\r\n        <div className=\"container\">\r\n          <div className=\"columns\">\r\n            <div className=\"column is-half is-offset-one-quarter\">\r\n              <h1 className=\"is-size-3 has-text-centered\">\r\n                Random Quote Generator\r\n              </h1>\r\n              <br />\r\n              <Quote />\r\n            </div>\r\n          </div>\r\n          <h1 className=\"is-size-4 has-text-centered\">Recent Quotes</h1>\r\n          <br />\r\n          <div className=\"columns is-multiline\">\r\n            {this.props.generatedQuotes.map((item, i) => (\r\n              <div className=\"column is-half\" key={i}>\r\n                <QuoteCard\r\n                  author={item.name}\r\n                  quote={item.quote}\r\n                  email={item.email}\r\n                  date={item.date}\r\n                  id={item.id}\r\n                  deleteQuote={this.props.deleteQuote}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n        </div>          \r\n\r\n      </section>        \r\n      <footer className=\"footer\">\r\n            <div className=\"content has-text-centered\">\r\n              <p>\r\n                <strong>Random Quote Generator</strong> by{\" \"}\r\n                <a href=\"https://github.com/fendermaniac\">Joe LoPresti</a>.\r\n              </p>\r\n            </div>\r\n          </footer>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    generatedQuotes: state.quotes.generatedQuotes\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  generateQuote: () => dispatch(generateQuote()),\r\n  deleteQuote: id => dispatch(deleteQuote(id))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);\r\n","import React from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\nimport App from \"./App\";\r\n\r\nimport \"./index.css\";\r\nimport \"bulma/css/bulma.css\";\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}