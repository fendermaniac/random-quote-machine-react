{"version":3,"sources":["reducers/quotes.js","actions/types.js","reducers/index.js","store.js","actions/index.js","components/Quote.js","components/QuoteCard.js","App.js","index.js"],"names":["defaultState","quote","name","email","date","Date","now","generatedQuotes","id","quotes","state","arguments","length","undefined","action","type","Object","objectSpread","payload","body","concat","toConsumableArray","filter","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","apply","generateQuote","dispatch","randomNum","Math","floor","random","fetch","toString","then","res","json","data","connect","author","_ref","react_default","a","createElement","className","onClick","window","open","QuoteCard","deleteQuote","key","src","alt","App","_this","this","components_Quote","props","map","item","i","components_QuoteCard","href","Component","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.712ef876.chunk.js","sourcesContent":["import { GENERATE_QUOTE, DELETE_QUOTE } from '../actions/types';\r\n\r\nconst defaultState = \r\n{ quote: 'Hello World!',\r\n  name: 'Foo Bar',\r\n  email: 'foo@baz.com',\r\n  date: Date(Date.now()),\r\n  generatedQuotes: [],\r\n  id: 0\r\n\r\n }\r\n\r\nconst quotes = (state = defaultState, action) => {\r\n  switch(action.type) {\r\n    case GENERATE_QUOTE : \r\n      return { ...state, \r\n        quote: action.payload.body, \r\n        name: action.payload.name,\r\n        email: action.payload.email,\r\n        date: action.date,\r\n        id: action.payload.id,\r\n        generatedQuotes: [...state.generatedQuotes, {\r\n          quote: action.payload.body, \r\n          name: action.payload.name,\r\n          email: action.payload.email,\r\n          date: action.date,\r\n          id: action.payload.id\r\n        }]\r\n      } \r\n    case DELETE_QUOTE : \r\n        return {\r\n          ...state,\r\n          generatedQuotes: state.generatedQuotes.filter(quote=>quote.id !== action.id)\r\n        }\r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport default quotes;","export const GENERATE_QUOTE = 'GENERATE_QUOTE';\r\nexport const DELETE_QUOTE = 'DELETE_QUOTE';","import { combineReducers } from \"redux\";\r\nimport quotes from './quotes';\r\n\r\nexport default combineReducers({\r\n  quotes\r\n})","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(rootReducer, initialState, composeWithDevTools(\r\n    applyMiddleware(...middleware),\r\n    // other store enhancers if any\r\n  ));\r\n\r\nexport default store;","import { GENERATE_QUOTE, DELETE_QUOTE } from './types';\r\n\r\n\r\nexport const generateQuote = () => dispatch => {\r\n  const randomNum = (Math.floor(Math.random() * (500 - 1)) + 1);\r\n  return fetch(`https://jsonplaceholder.typicode.com/comments?id=${randomNum.toString()}`)\r\n  .then(res => res.json())\r\n  .then(data => {\r\n    dispatch( {\r\n      type: GENERATE_QUOTE, \r\n      payload: data[0],\r\n      date: Date(Date.now())\r\n    })\r\n  })\r\n}\r\n\r\nexport const deleteQuote = id => \r\n({\r\n  type: DELETE_QUOTE,\r\n  id\r\n})","/* eslint-disable react/require-default-props */\r\n/* eslint-disable react/button-has-type */\r\n/* eslint-disable react/jsx-filename-extension */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { generateQuote} from '../actions';\r\n\r\nconst Quote = ({quote, author, email, date, generateQuote}) => {\r\n\r\n  return (\r\n    <div className=\"box\">\r\n      <p>\r\n        <strong>Quote:</strong>\r\n        {' '}\r\n        {quote}\r\n      </p>\r\n      <p>\r\n        <strong>Author:</strong>\r\n        {' '}\r\n        {author}\r\n      </p>\r\n      <p>\r\n        <strong>Email:</strong>\r\n        {' '}\r\n        {email}\r\n      </p>\r\n      <p>\r\n        <strong>Date:</strong>\r\n        {' '}\r\n        {date}\r\n      </p>\r\n      <br />\r\n      <div className=\"buttons\">\r\n        <button className=\"button is-primary is-small\" onClick={generateQuote}>New Quote</button>\r\n        <button className=\"button is-success is-small\" onClick={() => window.open(`https://twitter.com/intent/tweet?text=\"${quote}\" Quote by: ${author}`)}>Tweet Quote</button>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nQuote.propTypes = {\r\n  quote: PropTypes.string,\r\n  author: PropTypes.string,\r\n  email: PropTypes.string,\r\n  date: PropTypes.string,\r\n  generateQuote: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  return {\r\n    quote: state.quotes.quote,\r\n    author: state.quotes.name,\r\n    email: state.quotes.email,\r\n    date: state.quotes.date,\r\n\r\n};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    generateQuote: () => dispatch(generateQuote())    \r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quote);\r\n","/* eslint-disable react/button-has-type */\r\n/* eslint-disable react/jsx-filename-extension */\r\n/* eslint-disable react/require-default-props */\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst QuoteCard = ({author, email, date, quote, id, deleteQuote}) => {\r\n  return (\r\n    <div className=\"box\" key={date}>\r\n      <article className=\"media\">\r\n        <div className=\"media-left\">\r\n          <figure className=\"image is-128x128\">\r\n            <img src=\"https://bulma.io/images/placeholders/128x128.png\" alt=\"Mock\" />\r\n          </figure>\r\n        </div>\r\n        <div className=\"media-content\">\r\n          <div className=\"content\">\r\n            <p>\r\n              <strong>{author}</strong>\r\n              <small>{email}</small>\r\n              <br />\r\n              <small><em>{date}</em></small>\r\n              <br />\r\n              {quote}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </article>\r\n      <br />\r\n      <div className=\"buttons\">\r\n        <button className=\"button is-success is-small\" onClick={() => window.open(`https://twitter.com/intent/tweet?text=\"${quote}\" Quote by: ${author}`)}>Tweet Quote</button>\r\n        <button className=\"button is-danger is-small\" onClick={() => deleteQuote(id)}>Delete Quote</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nQuoteCard.propTypes = {\r\n  quote: PropTypes.string,\r\n  author: PropTypes.string,\r\n  email: PropTypes.string,\r\n  date: PropTypes.string,\r\n  deleteQuote: PropTypes.func,\r\n};\r\n\r\nexport default QuoteCard;\r\n","import React, { Component } from 'react';\r\nimport Quote from './components/Quote';\r\nimport QuoteCard from './components/QuoteCard';\r\nimport { connect } from 'react-redux';\r\nimport { generateQuote, deleteQuote } from './actions';\r\n\r\nclass App extends Component {\r\n\r\n  componentDidMount() {\r\n    generateQuote()\r\n  }\r\n\r\n  render() { \r\n    return ( \r\n      <section className=\"section\">\r\n      <div className=\"container\">\r\n        <div className=\"columns\">\r\n        <div className=\"column is-half is-offset-one-quarter\">\r\n        <h1 className=\"is-size-3 has-text-centered\">Random Quote Generator</h1>\r\n        <br/>\r\n        <Quote />\r\n        </div>\r\n        </div>\r\n        <h1 className=\"is-size-4 has-text-centered\">Recent Quotes</h1>\r\n        <br/>\r\n        <div className=\"columns is-multiline\">\r\n          {this.props.generatedQuotes.map((item, i) => \r\n                <div className=\"column is-half\" key={i}>\r\n                <QuoteCard\r\n                  author={item.name} \r\n                  quote={item.quote} \r\n                  email={item.email} \r\n                  date={item.date}\r\n                  id={item.id}\r\n                  deleteQuote={this.props.deleteQuote}\r\n                />\r\n                </div>\r\n          )}\r\n        </div>\r\n        <footer className=\"footer\">\r\n  <div className=\"content has-text-centered\">\r\n    <p>\r\n      <strong>Random Quote Generator</strong> by <a href=\"https://github.com/fendermaniac\">Joe LoPresti</a>. \r\n    </p>\r\n  </div>\r\n</footer>\r\n      </div>\r\n      </section>\r\n      \r\n     );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n  return {\r\n    generatedQuotes: state.quotes.generatedQuotes,\r\n};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n\r\n    generateQuote: () => dispatch(generateQuote()),\r\n    deleteQuote: id => dispatch(deleteQuote(id))\r\n\r\n})\r\n \r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\nimport App from './App';\r\n\r\nimport './index.css';\r\nimport 'bulma/css/bulma.css';\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App/>\r\n  </Provider>\r\n    , document.getElementById('root'));\r\n"],"sourceRoot":""}